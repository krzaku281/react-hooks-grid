{"version":3,"sources":["services/dataCreator.js","../../src/hooks/useFiltering.js","../../src/hooks/usePaging.js","components/PagingComponent.js","App.js","../../src/hooks/useSorting.js","../../src/hooks/useGrid.js","../../src/hooks/useFormat.js","index.js"],"names":["faker","locale","useFiltering","initFilters","customPredicates","u","useState","filters","setFilters","filterFn","setFilterFn","rowCount","setRowCount","setFilter","id","value","newFilters","Object","assign","composeFilters","values","map","f","type","filterContains","filterEquals","filterGreater","filterLesser","entries","name","predicateFn","updateGrid","combineFilters","i","length","grid","filter","r","row","column","toLowerCase","indexOf","order","setGrid","newGrid","mixinApi","api","usePaging","size","index","pageIndex","setPageIndex","pageSize","setPageSize","setSize","setIndex","slice","pageCount","Math","ceil","PagingComponent","page","sizeOpened","setSizeOpened","nextIndex","doubleNextIndex","previousIndex","doublePeviousIndex","Col","ButtonGroup","Button","color","outline","ButtonDropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onClick","Pagination","aria-label","PaginationItem","disabled","PaginationLink","first","href","active","last","App","descending","customSortFn","initGrid","usePlugins","baseGrid","setBaseGrid","rows","outGrid","setOutGrid","ticks","setTicks","setUpdate","prev","plugins","cells","key","p","useEffect","sort","a","b","forEach","useGrid","React","useMemo","array","push","firstName","lastName","phone","phoneNumber","job","jobType","birthDate","date","between","points","random","number","min","max","dataCreator","sortColumn","setSortColumn","sortDesc","setSortDesc","sortFn","setSort","greaterPoints","lesserPoints","containsWithUpperCase","Container","Row","Table","onChange","e","target","placeholder","cell","Date","toLocaleDateString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc517008.chunk.js","sourcesContent":["import faker from 'faker';\r\nfaker.locale = 'en';\r\n\r\nconst createPerson = () => {\r\n  return {\r\n    firstName: faker.name.firstName(),\r\n    lastName: faker.name.lastName(),\r\n    phone: faker.phone.phoneNumber(),\r\n    job: faker.name.jobType(),\r\n    birthDate: faker.date.between('1940-01-01', '1999-12-31'),\r\n    points: faker.random.number({ min: 0, max: 1000 }),\r\n  };\r\n};\r\n\r\nexport default function dataCreator(length) {\r\n  const array = [];\r\n  for (let i = 0; i < length; i++) {\r\n    array.push(createPerson());\r\n  }\r\n  return array;\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useFiltering = (initFilters, customPredicates) => updateGrid => {\r\n  const [filters, setFilters] = useState(initFilters || {});\r\n  const [filterFn, setFilterFn] = useState(null);\r\n  const [rowCount, setRowCount] = useState(0);\r\n\r\n  const setFilter = (id, value) => {\r\n    const newFilters = Object.assign({}, filters, { [id]: Object.assign(filters[id], { value }) });\r\n    setFilters(newFilters);\r\n\r\n    setFilterFn(() =>\r\n      composeFilters(\r\n        ...Object.values(newFilters).map(f => {\r\n          if (!f.value) return () => true;\r\n\r\n          if (f.type === 'contains') return filterContains(f);\r\n          if (f.type === 'equals') return filterEquals(f);\r\n          if (f.type === 'greater') return filterGreater(f);\r\n          if (f.type === 'lesser') return filterLesser(f);\r\n\r\n          if (customPredicates) {\r\n            for (let [name, predicateFn] of Object.entries(customPredicates)) {\r\n              if (f.type === name) return predicateFn(f);\r\n            }\r\n          }\r\n\r\n          return () => true;\r\n        })\r\n      )\r\n    );\r\n    updateGrid();\r\n  };\r\n\r\n  const combineFilters = (...filters) => value => {\r\n    for (let i = 0; i < filters.length; i++) {\r\n      if (filters[i](value)) continue;\r\n      else return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const composeFilters = (...filters) => grid => grid.filter(combineFilters(...filters));\r\n\r\n  const filterContains = filter => row => row[filter.column].toLowerCase().indexOf(filter.value.toLowerCase()) > -1;\r\n  const filterEquals = filter => row => row[filter.column] === filter.value;\r\n  const filterGreater = filter => row => row[filter.column] > filter.value;\r\n  const filterLesser = filter => row => row[filter.column] < filter.value;\r\n\r\n  const order = 20;\r\n  const setGrid = grid => {\r\n    const newGrid = filterFn ? filterFn(grid) : grid;\r\n    setRowCount(newGrid.length);\r\n    return newGrid;\r\n  };\r\n  const mixinApi = api => {\r\n    Object.assign(api, { filters, setFilter, rowCount });\r\n  };\r\n\r\n  return { order, setGrid, mixinApi };\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const usePaging = (size, index) => updateGrid => {\r\n  const [pageIndex, setPageIndex] = useState(index || 0);\r\n  const [pageSize, setPageSize] = useState(size || 10);\r\n\r\n  const setSize = size => {\r\n    setPageSize(size);\r\n    updateGrid();\r\n  };\r\n  const setIndex = index => {\r\n    setPageIndex(index);\r\n    updateGrid();\r\n  };\r\n\r\n  const order = 40;\r\n  const setGrid = grid => grid.slice(pageIndex * pageSize, pageIndex * pageSize + pageSize);\r\n  const mixinApi = api => {\r\n    Object.assign(api, {\r\n      pageIndex,\r\n      pageSize,\r\n      setIndex,\r\n      setSize,\r\n      pageCount: Math.ceil(api.rowCount / pageSize),\r\n    });\r\n  };\r\n\r\n  return { order, setGrid, mixinApi };\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  ButtonGroup,\r\n  Button,\r\n  Col,\r\n  ButtonDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from 'reactstrap';\r\n\r\nconst PagingComponent = ({ page, pageIndex, setSize, setIndex, pageSize, pageCount, rowCount }) => {\r\n  const [sizeOpened, setSizeOpened] = useState(false);\r\n\r\n  const nextIndex = pageIndex + 1;\r\n  const doubleNextIndex = pageIndex + 2;\r\n  const previousIndex = pageIndex - 1;\r\n  const doublePeviousIndex = pageIndex - 2;\r\n\r\n  return (\r\n    <>\r\n      <Col>\r\n        <ButtonGroup>\r\n          <Button color=\"primary\">Row Count</Button>\r\n          <Button outline color=\"primary\">\r\n            {rowCount}\r\n          </Button>\r\n          <Button color=\"primary\">Page Count</Button>\r\n          <Button outline color=\"primary\">\r\n            {pageCount}\r\n          </Button>\r\n          <ButtonDropdown isOpen={sizeOpened} toggle={() => setSizeOpened(!sizeOpened)}>\r\n            <DropdownToggle color=\"primary\" caret>\r\n              Page Size\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem onClick={() => setSize(10)}>10</DropdownItem>\r\n              <DropdownItem onClick={() => setSize(20)}>20</DropdownItem>\r\n              <DropdownItem onClick={() => setSize(50)}>50</DropdownItem>\r\n              <DropdownItem onClick={() => setSize(100)}>100</DropdownItem>\r\n            </DropdownMenu>\r\n          </ButtonDropdown>\r\n          <Button outline color=\"primary\">\r\n            {pageSize}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Col>\r\n      <Col>\r\n        <Pagination aria-label=\"Paging\">\r\n          <PaginationItem disabled={pageIndex === 0}>\r\n            <PaginationLink first href=\"#\" onClick={() => setIndex(0)} />\r\n          </PaginationItem>\r\n          {doublePeviousIndex >= 0 ? (\r\n            <PaginationItem>\r\n              <PaginationLink href=\"#\" onClick={() => setIndex(doublePeviousIndex)}>\r\n                {doublePeviousIndex + 1}\r\n              </PaginationLink>\r\n            </PaginationItem>\r\n          ) : null}\r\n          {previousIndex >= 0 ? (\r\n            <PaginationItem>\r\n              <PaginationLink href=\"#\" onClick={() => setIndex(previousIndex)}>\r\n                {previousIndex + 1}\r\n              </PaginationLink>\r\n            </PaginationItem>\r\n          ) : null}\r\n          <PaginationItem active>\r\n            <PaginationLink href=\"#\" onClick={() => setIndex(pageIndex)}>\r\n              {page}\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n          {nextIndex < pageSize ? (\r\n            <PaginationItem>\r\n              <PaginationLink href=\"#\" onClick={() => setIndex(nextIndex)}>\r\n                {nextIndex + 1}\r\n              </PaginationLink>\r\n            </PaginationItem>\r\n          ) : null}\r\n          {doubleNextIndex < pageSize ? (\r\n            <PaginationItem>\r\n              <PaginationLink href=\"#\" onClick={() => setIndex(doubleNextIndex)}>\r\n                {doubleNextIndex + 1}\r\n              </PaginationLink>\r\n            </PaginationItem>\r\n          ) : null}\r\n          <PaginationItem disabled={page === pageCount || pageCount === 1}>\r\n            <PaginationLink last href=\"#\" onClick={() => setIndex(pageCount - 1)} />\r\n          </PaginationItem>\r\n        </Pagination>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\nexport default PagingComponent;\r\n","import React from 'react';\r\nimport dataCreator from './services/dataCreator';\r\nimport { useGrid, useFiltering, useSorting, usePaging } from 'react-hooks-grid';\r\nimport { Table, Row, Container } from 'reactstrap';\r\n\r\nimport PagingComponent from './components/PagingComponent';\r\n\r\nconst App = () => {\r\n  const dataGrid = React.useMemo(() => dataCreator(100000), []);\r\n\r\n  const {\r\n    grid,\r\n    sortDesc,\r\n    setSort,\r\n    filters,\r\n    setFilter,\r\n    rowCount,\r\n    pageCount,\r\n    pageIndex,\r\n    pageSize,\r\n    setIndex,\r\n    setSize,\r\n  } = useGrid(dataGrid, [\r\n    useSorting('lastName', false),\r\n    useFiltering(\r\n      {\r\n        firstName: { type: 'contains', column: 'firstName' },\r\n        lastName: { type: 'containsWithUpperCase', column: 'lastName' },\r\n        job: { type: 'contains', column: 'job' },\r\n        greaterPoints: { type: 'greater', column: 'points' },\r\n        lesserPoints: { type: 'lesser', column: 'points' },\r\n      },\r\n      {\r\n        containsWithUpperCase: filter => grid => grid[filter.column].indexOf(filter.value) > -1,\r\n      }\r\n    ),\r\n    usePaging(10),\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th key={'firstName'}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={filters.firstName.value || ''}\r\n                    onChange={e => setFilter('firstName', e.target.value)}\r\n                    placeholder={'Contains'}\r\n                  />\r\n                  <div onClick={e => setSort('firstName', !sortDesc)}>First Name</div>\r\n                </th>\r\n                <th key={'lastName'}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={filters.lastName.value || ''}\r\n                    onChange={e => setFilter('lastName', e.target.value)}\r\n                    placeholder={'Uppercase contains'}\r\n                  />\r\n                  <div onClick={e => setSort('lastName', !sortDesc)}>Last Name</div>\r\n                </th>\r\n                <th key={'job'}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={filters.job.value || ''}\r\n                    onChange={e => setFilter('job', e.target.value)}\r\n                    placeholder={'Contains'}\r\n                  />\r\n                  <div onClick={e => setSort('job', !sortDesc)}>Job</div>\r\n                </th>\r\n                <th key={'phone'}>\r\n                  <div onClick={e => setSort('phone', !sortDesc)}>Phone</div>\r\n                </th>\r\n                <th key={'birthDate'}>\r\n                  <div onClick={e => setSort('birthDate', !sortDesc)}>Birth Date</div>\r\n                </th>\r\n                <th key={'points'}>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={filters.greaterPoints.value || ''}\r\n                    onChange={e => setFilter('greaterPoints', e.target.value)}\r\n                    placeholder={'Greater than'}\r\n                  />\r\n                  <input\r\n                    type=\"number\"\r\n                    value={filters.lesserPoints.value || ''}\r\n                    onChange={e => setFilter('lesserPoints', e.target.value)}\r\n                    placeholder={'Lesser than'}\r\n                  />\r\n                  <div onClick={e => setSort('points', !sortDesc)}>Points</div>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {grid.rows.map((row, index) => (\r\n                <tr key={index}>\r\n                  {row.cells.map(cell => (\r\n                    <td key={cell.key}>{cell.value instanceof Date ? cell.value.toLocaleDateString() : cell.value}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row>\r\n          <PagingComponent\r\n            page={pageIndex + 1}\r\n            pageIndex={pageIndex}\r\n            setIndex={setIndex}\r\n            setSize={setSize}\r\n            pageSize={pageSize}\r\n            pageCount={pageCount}\r\n            rowCount={rowCount}\r\n          />\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import { useState } from 'react';\r\n\r\nexport const useSorting = (column, descending, customSortFn) => updateGrid => {\r\n  const [sortColumn, setSortColumn] = useState(column);\r\n  const [sortDesc, setSortDesc] = useState(descending);\r\n\r\n  const baseSortFn = (a, b, column, descending) => {\r\n    if (a[column] > b[column]) return descending ? -1 : 1;\r\n    if (a[column] < b[column]) return descending ? 1 : -1;\r\n    return 0;\r\n  };\r\n\r\n  const sortFn = customSortFn || baseSortFn;\r\n\r\n  const setSort = (column, descending) => {\r\n    setSortColumn(column);\r\n    setSortDesc(descending);\r\n    updateGrid();\r\n  };\r\n\r\n  const order = 30;\r\n  const setGrid = grid => grid.sort((a, b) => sortFn(a, b, sortColumn, sortDesc));\r\n  const mixinApi = api => {\r\n    Object.assign(api, { sortColumn, sortDesc, setSort });\r\n  };\r\n\r\n  return { order, setGrid, mixinApi };\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { useFormat } from './useFormat';\r\n\r\nexport const useGrid = (initGrid, usePlugins) => {\r\n  const [baseGrid, setBaseGrid] = useState(initGrid);\r\n  const [outGrid, setOutGrid] = useState({ rows: [] });\r\n  const [ticks, setTicks] = useState(0);\r\n\r\n  const setUpdate = () => {\r\n    setTicks(prev => (prev += 1));\r\n  };\r\n\r\n  const plugins = [...usePlugins, useFormat()].map(p => p(setUpdate));\r\n\r\n  useEffect(() => {\r\n    let newGrid = [...baseGrid];\r\n    plugins\r\n      .sort((a, b) => a.order - b.order)\r\n      .forEach(p => {\r\n        newGrid = p.setGrid(newGrid);\r\n      });\r\n\r\n    setOutGrid(newGrid);\r\n  }, [baseGrid, ticks]);\r\n\r\n  const api = {\r\n    grid: outGrid,\r\n    setGrid: setBaseGrid,\r\n    rowCount: outGrid.length,\r\n  };\r\n  plugins.forEach(p => p.mixinApi(api));\r\n\r\n  return api;\r\n};\r\n","export const useFormat = () => updateGrid => {\r\n  const order = 50;\r\n  const setGrid = grid => {\r\n    return {\r\n      rows: grid.map(row => {\r\n        return {\r\n          cells: Object.entries(row).map(([key, value]) => {\r\n            return {\r\n              value,\r\n              key,\r\n            };\r\n          }),\r\n        };\r\n      }),\r\n    };\r\n  };\r\n\r\n  const mixinApi = api => {};\r\n\r\n  return { order, setGrid, mixinApi };\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}